@use "../../../styles/animations.scss" as animations;

.base {
  position: relative;
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: space-between;
  overflow: hidden;
  border-radius: 0.375rem;
  border-width: 1px;
  padding: 1.5rem;
  padding-right: 2rem;
  box-shadow: 0 0 #0000, 0 0 #0000, 0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}


.base > :not([hidden]) ~ :not([hidden]) {
  margin-right: calc(1rem * 0);
  margin-left: calc(1rem * calc(1 - 0));
}


.base[data-swipe="cancel"] {
  transform: translate(0, 0)
    rotate(0) skewX(0) skewY(0)
    scaleX(1) scaleY(1);
}

.base[data-swipe="end"] {
  transform: translate(var(--radix-toast-swipe-end-x), 0)
    rotate(0) skewX(0) skewY(0)
    scaleX(1) scaleY(1);
}

.base[data-swipe="move"] {
  transform: translate(var(--radix-toast-swipe-move-x), 0)
    rotate(0) skewX(0) skewY(0)
    scaleX(1) scaleY(1);
  transition-property: none;
}

.base[data-state="open"] {
   @include animations.animate-in
   @include animations.animate(animated-in, 2s, linear, 1)
}

.base[data-state="closed"] {
  @include animations.animate-out
  @include animations.animate(animate-out, 2s, linear, 1)
}

.base[data-swipe="end"] {
  /* Unknown class .animate-out */
}

.base[data-state="closed"] {
  /* Unknown class .fade-out-80 */
  /* Unknown class .slide-out-to-right-full */
}

.base[data-state="open"] {
  /* Unknown class .slide-in-from-top-full */

  @media (min-width: 640px) {
    /* Unknown class .slide-in-from-bottom-full */
  }
}


.default {
  border-width: 1px;
  background-color: hsl(tokens.$background);
  color: hsl(tokens.$background-foreground)
}


.destructive {
  border: 1px solid hsl(tokens.$destructive);
  background-color: hsl(tokens.$destructive);
  color: hsl(tokens.$destructive-foreground)
}
